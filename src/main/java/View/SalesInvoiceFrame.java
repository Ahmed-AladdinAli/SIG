/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;


import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.net.URL;
import java.sql.SQLOutput;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author hp
 */
public class SalesInvoiceFrame extends javax.swing.JFrame 
        implements ActionListener {

    public static String path;
    public static ArrayList<String> invoices;
    public static  String[]data;
    public String[]LTabledataRow ;
    public List<String>list;
    public  String[][]theList;
    public String canonicalPath;



//    ArrayList<Model.Line[]> lines = new ArrayList <Model.Line> ();
    public SalesInvoiceFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        HTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        invoice_Number_Lb = new javax.swing.JLabel();
        customer_Name_Lb = new javax.swing.JLabel();
        invoice_Date_Lb = new javax.swing.JLabel();
        invoice_Total_Lb = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        LTable = new javax.swing.JTable();
        btnCreatesInvoice = new javax.swing.JButton();
        btnDeletesInvoice = new javax.swing.JButton();
        btnCreatesItem = new javax.swing.JButton();
        btnDeletesItem = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        loadInvoice = new javax.swing.JMenuItem();
        saveInvoice = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Date", "Customer", "Total"
            }
        ));
        HTable.setColumnSelectionAllowed(true);

        jScrollPane1.setViewportView(HTable);
        HTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        jLabel1.setText("Invoice Num");

        jLabel2.setText("Customer Name");

        jLabel3.setText("Invoice Date");

        jLabel4.setText("Invoice Total ");

        invoice_Number_Lb.setText("jLabel5");

        customer_Name_Lb.setText("jLabel6");

        invoice_Date_Lb.setText("jLabel7");

        invoice_Total_Lb.setText("jLabel8");

        LTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
               theList
            },
            new String [] {
                "No.", "Item Name", "Item Price", "Count", "Item Total"
            }
        ));

        jScrollPane2.setViewportView(LTable);
        if (LTable.getColumnModel().getColumnCount() > 0) {
            LTable.getColumnModel().getColumn(0).setHeaderValue("No.");
            LTable.getColumnModel().getColumn(1).setHeaderValue("Item Name");
            LTable.getColumnModel().getColumn(2).setHeaderValue("Item Price");
            LTable.getColumnModel().getColumn(3).setHeaderValue("Count");
            LTable.getColumnModel().getColumn(4).setHeaderValue("Item Total");
        }

        btnCreatesInvoice.setText("Create Invoice");
        btnCreatesInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatesInvoiceActionPerformed(evt);
            }
        });

        btnDeletesInvoice.setText("Delete Invoice ");
        btnDeletesInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletesInvoiceActionPerformed(evt);
            }
        });

        btnCreatesItem.setText("Create Item");
        btnCreatesItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatesItemActionPerformed(evt);
            }
        });

        btnDeletesItem.setText("Delete Item");
        btnDeletesItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletesItemActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        loadInvoice.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        loadInvoice.setText("Load");
        loadInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadInvoiceActionPerformed(evt);
            }
        });
        jMenu1.add(loadInvoice);

        saveInvoice.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        saveInvoice.setText("Save");
        saveInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveInvoiceActionPerformed(evt);
            }
        });
        jMenu1.add(saveInvoice);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(invoice_Total_Lb))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(invoice_Date_Lb))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(invoice_Number_Lb))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addComponent(customer_Name_Lb)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(btnCreatesInvoice)
                .addGap(93, 93, 93)
                .addComponent(btnDeletesInvoice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCreatesItem)
                .addGap(76, 76, 76)
                .addComponent(btnDeletesItem)
                .addGap(84, 84, 84))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(invoice_Number_Lb))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(customer_Name_Lb))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(invoice_Date_Lb))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(invoice_Total_Lb))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreatesItem)
                    .addComponent(btnDeletesItem)
                    .addComponent(btnDeletesInvoice)
                    .addComponent(btnCreatesInvoice))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadInvoiceActionPerformed
        // TODO add your handling code here:
       if(evt.getSource()== loadInvoice){
    openFile();

       }
    }//GEN-LAST:event_loadInvoiceActionPerformed

    private void saveInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveInvoiceActionPerformed
        // TODO add your handling code here:
        if(evt.getSource() == saveInvoice){
            saving();}
    }//GEN-LAST:event_saveInvoiceActionPerformed

    private void btnCreatesItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatesItemActionPerformed
         if (evt.getSource()== btnCreatesItem){
                 JTextField ItemNameField = new JTextField(10);
                 JTextField ItemPriceField= new JTextField (10);
                 JTextField ItemCountField= new JTextField (10);
                 JPanel ItemEnteringPanel =new JPanel();
                 ItemEnteringPanel.add(new JLabel("Item_Name"));
                 ItemEnteringPanel.add(ItemNameField);
                 ItemEnteringPanel.add(new JLabel("Item_Price"));
                 ItemEnteringPanel.add(ItemPriceField);
                 ItemEnteringPanel.add(new JLabel("Item_Count"));
                 ItemEnteringPanel.add(ItemCountField);


         JOptionPane.showInputDialog(null, ItemEnteringPanel,
                 " Item Data ",JOptionPane.OK_CANCEL_OPTION);
         if(ItemNameField.getText().equals("")||ItemPriceField.getText().equals("")||ItemCountField.getText().equals("")){
       
         JOptionPane.showMessageDialog(this,"please Enter All Data!");
         }else{
         String data[]= {ItemNameField.getText(),ItemPriceField.getText(),ItemCountField.getText()};
         DefaultTableModel model= (DefaultTableModel)LTable.getModel();
         model.addRow(data);
         
         }
         }
      
    }//GEN-LAST:event_btnCreatesItemActionPerformed

    private void btnCreatesInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatesInvoiceActionPerformed

        if(evt.getSource()== btnCreatesInvoice){
            Date date = new Date();
            JTextField dating = new JTextField(10);
            JTextField customerName = new JTextField (10);
            JPanel InvoiceEnteringPanel = new JPanel();
            InvoiceEnteringPanel.add(new JLabel("customer name "));
            InvoiceEnteringPanel.add(customerName );
            InvoiceEnteringPanel.add(new JLabel("Date"));
            InvoiceEnteringPanel.add(dating);

            JOptionPane.showInputDialog(null, InvoiceEnteringPanel, "Invoice Data",
                    JOptionPane.OK_CANCEL_OPTION);
            if(dating.getText().equals("")||customerName.getText().equals(""))
                JOptionPane.showMessageDialog(this,"please Enter All data!");
            else{
                // Header header = new Header(0, dating.getText(), customerName.getText());


                String data[]= {"" , dating.getText(),customerName.getText(),"" };

                DefaultTableModel model= (DefaultTableModel)HTable.getModel();
                model.addRow(data);
                JOptionPane.showMessageDialog(this,"Data has been added successfully....!" );
                dating.setText("");
                customerName.setText("");

            }
        }
    }//GEN-LAST:event_btnCreatesInvoiceActionPerformed

    private void btnDeletesInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletesInvoiceActionPerformed
if(evt.getSource() == btnDeletesInvoice ){
     
    System.out.println("the function is reached");

DefaultTableModel model = (DefaultTableModel)HTable.getModel();

try{
int SelectedRowIndex = HTable.getSelectedRow();
model.removeRow(SelectedRowIndex);
}catch(Exception ex)
{JOptionPane.showMessageDialog(null,ex);}


}        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeletesInvoiceActionPerformed

    private void btnDeletesItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletesItemActionPerformed
if(evt.getSource() == btnDeletesItem ){
     
    System.out.println("the function is reached");

DefaultTableModel model = (DefaultTableModel)LTable.getModel();

try{
int SelectedRowIndex = LTable.getSelectedRow();
model.removeRow(SelectedRowIndex);
}catch(Exception ex)
{JOptionPane.showMessageDialog(null,ex);}


}        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeletesItemActionPerformed






                                   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {


        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
                System.out.println(path);        
                System.out.println(data);
                System.out.println(invoices);
                SalesInvoiceFrame SIF = new SalesInvoiceFrame();
                SIF.loadingLTable();
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesInvoiceFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesInvoiceFrame().setVisible(true);
            } 

          
        });
            
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable HTable;
    private static javax.swing.JTable LTable;
    public javax.swing.JButton btnCreatesInvoice;
    private javax.swing.JButton btnCreatesItem;
    private javax.swing.JButton btnDeletesInvoice;
    private javax.swing.JButton btnDeletesItem;
    private javax.swing.JLabel customer_Name_Lb;
    private javax.swing.JLabel invoice_Date_Lb;
    private javax.swing.JLabel invoice_Number_Lb;
    private javax.swing.JLabel invoice_Total_Lb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem loadInvoice;
    private javax.swing.JMenuItem saveInvoice;
    // End of variables declaration//GEN-END:variables
     

  private void openFile(){
                JFileChooser choosingFile = new JFileChooser();
                int result = choosingFile.showOpenDialog(this);

        if (result== JFileChooser.APPROVE_OPTION ) {
          String path =  choosingFile.getSelectedFile().getPath();

          System.out.println(path);          // path is ok
           FileInputStream  uploadedFile =null;
          
            try{
                //first trial 
                 canonicalPath =  choosingFile.getSelectedFile().getCanonicalPath();
                 System.out.println("the canonical Path"+canonicalPath);
                BufferedReader br = new BufferedReader(new FileReader(path));
                DefaultTableModel model = (DefaultTableModel)HTable.getModel();
                Object[]tableLines = br.lines().toArray();
                for(int i=0 ; i<tableLines.length;i++){
                    String line = tableLines[i].toString().trim();
                    String[]dataRow = line.split(",");
                    model.addRow(dataRow);
                }
                                    
              }
catch(Exception e){
                System.out.println("the file can't be read");
            }
    
        }}
private void saving() {
        JFileChooser filechoosing = new JFileChooser();
        int saveResult = filechoosing.showSaveDialog(this);
        if (saveResult == JFileChooser.APPROVE_OPTION) {
            String path = filechoosing.getSelectedFile().getPath();
           File file = new File(path);
            try {
               FileWriter fw = new FileWriter(file);
               BufferedWriter bw = new BufferedWriter(fw);
               
               for(int i=0; i<HTable.getRowCount();i++){
                   for(int j=0; j<HTable.getColumnCount();j++){
                   bw.write(HTable.getValueAt(i,j).toString()+",");
                   }
                   bw.newLine();
               }
               bw.close();
               fw.close();
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            } 
        }
    }
 public void loadingLTable (){
  String ProjectPath  = System.getProperty("user.dir");
 String LTablePath = ProjectPath+"\\Data of SIG\\InvoiceLine.csv";
     System.out.println(LTablePath);
 // String LTablePath = "C:\\Users\\ahmed elhwash\\Desktop\\SIG-main\\Data of SIG\\InvoiceLine.csv";


     File file = new File( LTablePath);
     System.out.println(LTablePath);

     try{
         //first trial

         BufferedReader br = new BufferedReader(new FileReader(file));
         DefaultTableModel model = (DefaultTableModel)LTable.getModel();

         Object[]tableLines = br.lines().toArray();
         for(int i=0 ; i<tableLines.length;i++){
             String line = tableLines[i].toString().trim();
             LTabledataRow = line.split(",");
//                    model.addRow(LTabledataRow);
             //List<String> list =new ArrayList<String>();
             list=Arrays.asList(LTabledataRow);
             model.addRow(LTabledataRow);


             System.out.println("the wanted list of data "+ Arrays.asList(LTabledataRow));

             //theList = new String[list.size()];
             theList= new String[list.size()][list.size()];
             for(int j=0 ; j<list.size();j++){
                 for(int k=0 ; k<list.size(); k++){
                     theList[j][k]=list.get(i);
                 }
             }

         }

     }
     catch(Exception e){
         System.out.println("the file can't be read");
     }

 }

   public void actionPerformed(ActionEvent e) {
    switch (e.getActionCommand()){

//        case "btnCreatesInvoice":
//
//            break;
//        case "btnDeletesInvoice":
//
//            break;
//        case "btnCreatesItem":
//
//            break;
//
//        case "btnDeletesItem":
//
//            break;

        case "loadInvoice":
             openFile();
            break;

        case "saveInvoice":
             saving();

            break;
        }

      } 
    }



          
         
   


